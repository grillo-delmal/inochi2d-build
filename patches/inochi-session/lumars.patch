diff --git a/dub.sdl b/dub.sdl
index 55a012b..c23b4d2 100644
--- a/dub.sdl
+++ b/dub.sdl
@@ -30,6 +30,9 @@ stringImportPaths "res"
 configuration "barebones" {
 	platforms "linux"
 	targetType "executable"
+
+	subConfiguration "lumars" "lua51-dynamic"
+	versions "LUA_51"
 }
 
 configuration "win32-barebones" {
@@ -57,6 +60,9 @@ configuration "full" {
 	versions "InBranding"
 
 	preBuildCommands "dub run gitver -- --prefix INS --file source/session/ver.d --mod session.ver --appname \"Inochi Session\" --itchfile version.txt"
+
+	subConfiguration "lumars" "lua51-dynamic"
+	versions "LUA_51"
 }
 
 configuration "osx-full" {
diff --git a/source/session/plugins/package.d b/source/session/plugins/package.d
index 965c64f..84bc5ed 100644
--- a/source/session/plugins/package.d
+++ b/source/session/plugins/package.d
@@ -34,13 +34,11 @@ Plugin[] insPlugins;
     Initializes Lua support
 */
 void insLuaInit() {
-    // LuaSupport support = loadLua();
-
-    // if (support == LuaSupport.noLibrary || support == LuaSupport.badLibrary) {
-    //     couldLoadLua = false;
-    //     insLogWarn("Could not load Lua support...");
-    // } else insLogInfo("Lua support initialized.");
-    insLogInfo("Lua support initialized. (Statically linked for now)");
+    LuaSupport support = loadLua("libluajit-5.1.so.2");
+    if (support == LuaSupport.noLibrary || support == LuaSupport.badLibrary) {
+        couldLoadLua = false;
+        insLogWarn("Could not load Lua support...");
+    } else insLogInfo("Lua support initialized.");
 
     // Create Lua state
     state = new LuaState(luaL_newstate());
@@ -55,6 +53,7 @@ void insLuaInit() {
 
 void insLuaUnload() {
     lua_close(state.handle());
+    unloadLua();
     destroy(state);
 }
 
